//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AspNetMVC5WithNg.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRUD_SampleEntities : DbContext
    {
        public CRUD_SampleEntities()
            : base("name=CRUD_SampleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Delete_Customer(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Delete_Customer", idParameter);
        }
    
        public virtual ObjectResult<Get_Customer_Result> Get_Customer(Nullable<long> count)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Customer_Result>("Get_Customer", countParameter);
        }
    
        public virtual ObjectResult<Get_CustomerbyID_Result> Get_CustomerbyID(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_CustomerbyID_Result>("Get_CustomerbyID", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Set_Customer(string custName, string custEmail)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var custEmailParameter = custEmail != null ?
                new ObjectParameter("CustEmail", custEmail) :
                new ObjectParameter("CustEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Set_Customer", custNameParameter, custEmailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Update_Customer(Nullable<long> id, string custName, string custEmail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var custEmailParameter = custEmail != null ?
                new ObjectParameter("CustEmail", custEmail) :
                new ObjectParameter("CustEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Update_Customer", idParameter, custNameParameter, custEmailParameter);
        }
    }
}
